1.
ssh greg@control

sudo yum -y install ansible-core ansible-navigator
mkdir -p /home/greg/ansible/inventory
cd ansible 
cat /etc/ansible/ansible.cfg
ansible-config init --disabled > /home/greg/ansible/ansible.cfg
vim ansible.cfg
inventory =/home/greg/ansible/inventory
remote_user= greg
host_key_checking =False
roles_path =/home/greg/ansible/roles:/usr/share/ansible/roles
collections_path= /home/greg/ansible/mycollection/:.ansible/collections:/usr/share/ansible/collections
become=True
ansible --version
ansible-galaxy list

vim inventory
[dev]
node1
[test]
node2
[prod]
node3
node4
[balancers]
node5
[webservers:children]
prod

ansible-inventory --graph
ansible all -m ping
podman login utility.example.lab -u admin -p redhat
ansible-navigator images
ansible-navigator collection


2.
vim yum_repo.yml
---
- name: yum_repository
  hosts: all
  tasks:
  - yum_repository:
      file: EX294_BASE
      name: EX294_BASE
      description: "EX294 base software"
      baseurl: http://content/rhel9.0/x86_64/dvd/BaseOS
      gpgcheck: yes
      gpgkey: http://content/rhel9.0/x86_64/dvd/RPM-GPG-KEY-redhat-release
      enabled: yes
  - yum_repository:
      file: EX294_STREAM
      name: EX294_STREAM
      description: "EX294 stream software"
      baseurl: http://content/rhel9.0/x86_64/dvd/AppStream
      gpgcheck: yes
      gpgkey: http://content/rhel9.0/x86_64/dvd/RPM-GPG-KEY-redhat-release
      enabled: yes
ansible-navigator run yum_repo.yml -m stdout
ansible all -m shell -a 'yum repoinfo'
ansible all -m shell -a 'yum install -y ftp'
ansible all -m shell -a 'rpm -q ftp'


3.
vim packages.yml
---
- name: install1
  hosts: dev,test,prod
  tasks:
  - name: install packages
    ansible.builtin.yum:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - php 
      - mariadb
- name: install2
  hosts: dev  
  tasks:
  - name: install group
    ansible.builtin.yum:
      name: '@RPM Development Tools'
      state: present
  - name: upgrade packages
    ansible.builtin.yum:
      name: '*'
      state: latest
ansible-navigator run packages.yml -m stdout
ansible dev,prod,test -m shell -a 'rpm -q php mariadb'
ansible dev -m shell -a 'yum grouplist'
ansible dev -m shell -a 'yum update'


4.
yum search roles
sudo yum -y install rhel-system-roles
cp /usr/share/doc/rhel-system-roles/example.selinux.yml  /home/greg/ansible/selinux.yml 
ansible-playbook selinux.yml
ansible all -m shell -a 'grep ^SELINUX= /etc/selinux/config ;getenforce'


5.
vim requirements.yml
---
collections
- name: http://classroom/materials/redhat-insights-1.0.7.tar.gz
- name: http://classroom/materials/community-general-5.5.0.tar.gz
- name: http://classroom/materialsredhat-rhel_system_roles-1.19.3.tar.gz

ansible-galaxy collection install -r requirements.yml -p /home/greg/ansible/mycollection

ansible-galaxy --list
ansible-navigator doc community.general.filesystem -m stdout


6.
vim role.requirements.yml
---
- src: http://classroom/materials/haproxy.tar 
  name: balancer
- src: http://classroom/materials/phpinfo.tar 
  name: phpinfo

ansible-galaxy roles  install -r roles/requirements.yml -p /home/greg/ansible/roles
ansible-galaxy list

7.
ansible-galaxy role init --init-path /home/greg/ansible/roles apache

vim ./roles/apache/tasks/main.yml
---
- name: install httpd
  ansible.builtin.yum:
    name: httpd
    state: latest
- name: start httpd
  ansible.builtin.systemd:
    name: httpd
    state: started
    enabled: yes
- name: start firewalld
  ansible.builtin.systemd:
    name: firewalld
    state: started
    enabled: yes
- name: start apache:
  ansible.posix.firewalld:
    service: http
    permanent: yes
    state: enabled
    immediate: yes
- template:
    src: index.html.j2
    dest: /var/www/html/index.html
vim roles/apache/template/index.html.2
Welcome to {{ ansible_nodename }} on {{ ansible_default_ipv4.address }}
vim apache.yml 
---
- name: Use apache
  hosts: webservers
  roles:
  - apache
ansible-navigator apache.yml -m stdout
curl http://node3
curl http://node4
ansible webservers --list-hosts


8.
vim roles.yml
--- 
- name: use webservers role
  hosts: webservers
  roles:
  - phpinfo
- name: use balancers role
  hosts: balancers
  roles:
  - balancer
ansible-navigator run roles.yml -m stdout
curl http://node5 

9.
vim lv.yml
---
- name: Create LVM
  hosts: all
  tasks:
  - block:
    - name: create 1500
      community.general.lvol:
        vg: research
        lv: data
        size: 1500
    - name: create ext4
      community.general.filesystem:
        fstype: ext4
        dev: /dev/research/data

    rescue:
    - name: Could not creat that size
      ansible.builtin.debug:
        msg: Could not create logical volume of that size
    - name: create 800
      community.general.lvol:
        vg: research
        lv: data
        size: 800
    - name: create ext4
      community.general.filesystem:
        fstype: ext4
        dev: /dev/research/data
    when: ansible_lvm.vgs.research is defined
  - debug:
      msg: Volume group done not exist
    when: ansible_lvm.vgs.research is not defined
ansible-navigator run lv.yml -m stdout
ansible all -m shell -a 'lvs'
ansible all -m shell -a 'blkid /dev/research/data'


wget http://classroom/materials/hosts.j2
vim hosts.j2
{% for i in groups.all %}
{{ hostvars[i].ansible_facts.default_ipv4.address }} {{
hostvars[i].ansible_facts.nodename }} {{ hostvars[i].ansible_facts.hostname }}
vim hosts.yml
---
- name: gen host file
  hosts: all
  tasks:
  - name: genhost file
    template:
      src: /moe/greg/ansible/hosts.j2
      dest: /etc/myhosts
    when: inventory_hostname in groups.dev

ansible-navigator run hosts.yml -m stdout
ansible dev -m shell -a 'cat /etc/myhosts'



11
vim issue.yml
---
- name: modify file
  hosts: all
  tasks:
  - name: modify conten1
    ansible.builtin.copy:
      content: 'Development'
      dest: /etc/issue
    when: inventory_hostname in groups.dev
    - name: modify conten2
    ansible.builtin.copy:
      content: 'Test'
      dest: /etc/issue
    when: inventory_hostname in groups.test
    - name: modify conten1
    ansible.builtin.copy:
      content: 'Production'
      dest: /etc/issue
    when: inventory_hostname in groups.prod
ansible-navigator run issue.yml -m stdout
ansible dev,test,prod -m shell -a 'cat /etc/issue'


12.
vim  webcontent.yml
---
- name: webcontentfile
  hosts: dev
  roles:
  - apache
  tasks:
  - name: create directory
    ansible.builtin.file:
      path: /webdev
      state: directory
      group: webdev
      mode: '2775'
  - name: create link
    ansible.builtin.file:
      src: /webdev
      dest: /var/www/html/webdev
      state: link
  - name: modify file
    ansible.builtin.copy:
      content: 'Development'
      dest: /webdev/index.html
      setype: httpd_sys_content_t
ansible-navigator run webcontent.yml -m stdout
curl http://node1/webdev

13
vim hwreport.yml
---
- name: general hwreport
  hosts: all
  tasks:
  - name: get url:
    ansible.builtin.get_url:
      url: http://classroom/materials/hwreport.empty
      dest: /root/hwreport.txt
  - name: content1
    ansible.builtin.lineinfile:
      path: /root/hwreport.txt
      regexp: "^HOST="
      line: HOST={{ inventory_hostname }}
  - name: content2
    ansible.builtin.lineinfile:
      path: /root/hwreport.txt
      regexp: "^MEMORY="
      line: MEMORY={{ ansible_memtotal_mb }}
  - name: content3
    ansible.builtin.lineinfile:
      path: /root/hwreport.txt
      regexp: "^BIOS="
      line: BIOS={{ ansible_bios_version }}
  - name: content4
    ansible.builtin.lineinfile:
      path: /root/hwreport.txt
      regexp: "^DISK_SIZE_VDA="
      line: DISK_SIZE_VDA={{ ansible_devices.vda.size }}
  - name: content4
    ansible.builtin.lineinfile:
      path: /root/hwreport.txt
      regexp: "^DISK_SIZE_VDB="
      line: DISK_SIZE_VDB={{ ansible_devices.vda.size | default('NONE',true) }}

ansible-navigator run hwreport.yml -m stdout
ansible all -m shell -a 'cat /root/hwreport.txt'

14.
vim ansible.cfg
vault_password_file= /home/greg/ansible/secret.txt
echo whenyouwishuponastart > ./secret.txt
ansible-vault create locker.yml
---
pw_developer: Imadev
pw_manager: Imamgr

ansible-vault view locker.yml 
cat locker.yml

15.
wget http://classroom/materials/user_list.yml
vim users.yml
---
- name: Add user1
  hosts: dev,test
  vars_files:
  - /home/greg/ansible/locker.yml
  - /home/greg/ansible/user_list.yml
  tasks:
  - name: Add group1
    group:
      name: devops
      state: present
  - name: Add user1
    user:
      name: "{{ item.name}}"
      groups: devops
      password: "{{ pw_developer | password_hash('sha512') }}"
      password_expire_max: "{{ item.password_expire_max }}"
    loop: "{{ users }}"
    when: item.job='developer'
- name: Add user2
  hosts: prod
  vars_files:
  - /home/greg/ansible/locker.yml
  - /home/greg/ansible/user_list.yml
  tasks:
  - name: Add group2
    group:
      name: opsmgr
      state: present
  - name: Add user2
    user:
      name: "{{ item.name}}"
      groups: opsmgr
      password: "{{ pw_manager  | password_hash('sha512') }}"
      password_expire_max: "{{ item.password_expire_max}}"
    loop: "{{ users }}"
    when: item.job='manager'
ansible-navigator run users.yml -m stdout
ansible dev,test -m shell -a 'id bob;id sally ; id fred'
ansible prod -m shell -a 'id bob;id sally'
ssh bob@node1
ssh sally@node3

16.
wget http://classroom/materials/salaries.yml
ansible-vault rekey --ask-vault-pass salaries.yml
ansible-vault view --ask-vault-pass salaries.yml

17.
vim cron.yml
---
- name: create conjob
  hosts: test
  tasks:
  - name: cronjob1
    cron:
      name: cronjob1
      minute: '*/2'
      job: 'logger "EX200 in progress"'
      user: natasha
ansible-navigator run cron.yml -m stdou
ansible test -m shell -a 'crontab -l -u natasha'
错题:9,10,11,13