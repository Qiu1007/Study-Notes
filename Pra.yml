
1.
ssh greg@control
sudo yum -y install ansible-navigator ansible-core
mkdir -p /home/greg/ansible/roles
mkdir -p /home/greg/ansible/mycollection
cd ansible
cat /etc/ansible/ansible.cfg
ansible-config init --disabled > /home/greg/ansible/ansible.cfg
vim ansible.cfg

inventory = /home/greg/ansible/inventory
remote_user =greg
host_key_check = False
roles_path = /home/greg/ansible/roles:/usr/share/ansible/roles
collections_path = /home/greg/ansible/mycollection:.ansible/collections:/usr/share/collections
become = True

ansible --version
ansible-galaxy list
vim inventory
[dev]
node1

[test]
node2

[prod]
node3
node4

[balancers]
node5

[webservers:children]
prod

ansible-inventory --graph
ansible all -m ping
podman login utility.lab.example -u admin -p passwd
ansible-navigator images
ansible-navigator collections


2.
echo set nut ts=2 et cuc sw=2 autoindent > ~/.vimrc
vim yum_repo.yml
---
- name: yum_repository
  hosts: all
  tasks:
  - yum_repository:
      file: EX294_BASE
      name: EX294_BASE
      description: "EX294 base software"
      baseurl: http://content/rhel9.0/x86_64/dvd/BaseOS
      gpgcheck: yes
      gpg_key: http://content/rhel9.0/x86_64/dvd/RPM-GPG-KEY-RPM-GPG-KEY-redhat-release
      enabled: yes
  - yum_repository:
      file: EX294_STREAM
      name: EX294_STREAM
      description: "EX294 stream software"
      baseurl: http://content/rhel9.0/x86_64/dvd/AppStream
      gpgcheck: yes
      gpg_key: http://content/rhel9.0/x86_64/dvd/RPM-GPG-KEY-RPM-GPG-KEY-redhat-release
      enabled: yes
ansible-navigator run yum_repo.yml -m stdout
ansible all -m shell -a 'yum repoinfo'
ansible all -m shell -a 'yum -y install ftp'
ansible all -m shell -a 'rpm -q ftp'


3.
vim packages.yml
---
- name: install1
  hosts: dev,test,prod
  tasks:
  - name: install packages
    ansible.builtin.yum:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - php
      - mariadb
- name: install1
  hosts: dev
  tasks:
  - name: install group
    ansible.builtin.yum:
      name: "@RPM Development Tools"
      state: present
  - name: install packages
    ansible.builtin.yum:
      name: '*'
      state: latest
ansible-navigator run packages.yml -m stdout
ansible dev,prod,test -m shell -a 'rpm -q php mariadb'
ansible dev -m shell -a 'yum grouplist'
ansible dev -m shell -a 'yum update'


4. 
yum search role
sudo yum -y install rhel_system_roles
cp /usr/share/doc/rhel_system_roles/selinux/example.selinux.yml /home/greg/ansible/selinux.yml
ansible-playbook selinux.yml
ansible all -m shell -a 'grep ^SELINUX= /etc/selinux/config ; getenforce'

5. vim requirements.yml
---
collections:
- src: http://classroom/materials/redhat-insights-1.0.7.tar.gz
- src: http://classroom/materials/community-general-5.5.0.tar.gz
- src: http://classroom/materials/redhat-rhel_system_roles-1.19.3.tar.gz

ansible-naviggalaxy  collection install -r requirements.yml -p /home/greg/ansible/mycollection
ansible-naviagator collections
ansible-navigator doc community.general.filesystem -m stdout


6.
vim roles/requirements.yml
---
- src: http://classroom/materials/haproxy.tar 
  name: balancer
- src: http://classroom/materials/phpinfo.tar
  name: phpinfo
ansible-galaxy install -r roles/requirements.yml -p /home/greg/ansible/roles -m stdout
ansible-galaxy list



7.
ansible-galaxy roles init --init-path /home/greg/ansible/roles apache
ansible-galaxy list
vim roles/apache/tasks/main.yml
---
- name: install httpd
  ansible.builtin.yum:
    name: httpd
    state: latest
- name: start httpd
  ansible.builtin.systemd:
    name: httpd
    state: started
    enabled: yes
- name: start firewalld
  ansible.builtin.systemd:
    name: firewalld
    state: started
    enabled: yes
- name: starte apache
  ansible.posix.firewalld:
    service: http
    permanent: yes
    state: enabled
    immediate: yes
- template:
    src: index.html.j2
    dest: /var/www/html/index.html
vim roles/apache/template/index.html.j2
Welcome to {{ ansible_nodename }} on {{ ansible_default_ipv4.address }}
vim apache.yml
--- 
- name: Use apache
  hosts: webservers
  roles:
  - apache
ansible-navigator run apache.yml -m stdout
ansible webservers --list-hosts
curl http://node3
curl http://node4


8.
vim roles.yml
---
- name: Use webservers
  hosts: webservers
  roles:
  - phpinfo
- name: Use balancers
  hosts: balancers
  roles:
  - balancer
ansible-navigator run roles.yml -m stdout
curl http://node5


9.
vim lv.yml
---
- name: Create LVM
  hosts: all
  tasks:
  - block:
    - name: create 1500m
      community.general.lvol:
        vg: research
        lv: data
        size: 1500
    - name: create ext4
      community.general.filesystem:
        fstype: ext4
        dev: /dev/research/data
    
    rescue:
    - name: could not create that size
      ansible.builtin.debug:
        msg: Could not create logical volume of that size
    - name: create 800m
      community.general.lvol:
        vg: research
        lv: data
        size: 800
    - name: create ext4
      community.general.filesystem:
        fstype: ext4
        dev: /dev/research/data
    when: ansible_lvm.vgs.research is defined
  - debug:
      msg:  Volume group done not exist
    when: ansible_lvm.vgs.research is not defined
ansible-navigator run lv.yml -m stdout
ansible all -m shell -a 'lvs'
ansible all -m shell -a 'blikid /dev/research/data'


10.

wget http://classroom/materials/hosts.j2
vim hosts.j2
{% for i in groups.all %}
{{ hostvars[i].ansible_facts.default.ipv4.address }}{{ hostvars[i].ansible_facts.nodename }}{{ hostvars[i].ansible_facts.hostname }}
{% endfor %}
vim hosts.yml
---
- name: gen host file
  hosts: all
  tasks:
  - name: use host file
    template:
      src: hosts.j2
      dest: /etc/myhosts
    when: inventory_hostname in groups.dev
    
ansible-navigator run hosts.yml -m stdout
ansible dev -m shell -a 'cat /etc/myhosts'

16
wget  http://classroom/materials/salaries.yml 
ansible-vault rekey --ask-vault-pass salaries.yml
insecure8sure
bbasyou9527
bbsyou9527
ansible-vault view salaries.yml
ansibl-vault view --ask-vault-pass salaries.yml

17
vim cron.yml
---
- name: crontab
  hosts: test
  tasks:
  - name: crontab1
    cron:
      name: "crontab"
      minute: '*/2'
      job: 'logger "EX200 in progress"'
      user: natasha
ansible-navigator run cron.yml -m stdout
ansible test -m shell -a 'crontab -l -u natasha'